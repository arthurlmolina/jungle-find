export default class Fireball extends Phaser.Physics.Arcade.Sprite {
    constructor(scene, x, y, direction) {
        super(scene, x, y, 'fireball');

        // Adiciona a bola de fogo na cena
        scene.add.existing(this);
        scene.physics.add.existing(this);

        this.direction = direction;
        this.speed = 300;
        this.damage = 25;
        this.lifeTime = 4000; // 4 segundos de vida

        // Configurações físicas
        this.body.setAllowGravity(false); // Sem gravidade
        this.setCollideWorldBounds(false);
        this.body.setSize(16, 16); // Ajuste do corpo de colisão
        this.setScale(2); // Aumenta o tamanho

        this.createAnimations();
        this.play('fireball_fly');

        // Define direção e velocidade
        if (direction === 'left') {
            this.setVelocityX(-this.speed);
            this.setFlipX(true);
        } else {
            this.setVelocityX(this.speed);
            this.setFlipX(false);
        }

        // Timer para autodestruição
        this.lifeTimer = scene.time.delayedCall(this.lifeTime, () => {
            this.destroy();
        });
    }

    createAnimations() {
        // Animação da bola de fogo voando
        if (!this.scene.anims.exists('fireball_fly')) {
            this.scene.anims.create({
                key: 'fireball_fly',
                frames: this.scene.anims.generateFrameNumbers('fireball', { start: 0, end: 3 }), // 4 frames
                frameRate: 12,
                repeat: -1
            });
        }

        // Animação de explosão (opcional)
        if (!this.scene.anims.exists('fireball_explode')) {
            this.scene.anims.create({
                key: 'fireball_explode',
                frames: this.scene.anims.generateFrameNumbers('fireball_explode', { start: 0, end: 5 }), // 6 frames
                frameRate: 15,
                repeat: 0
            });
        }
    }

    // Método para explodir ao colidir
    explode() {
        this.setVelocityX(0);
        this.play('fireball_explode');
        
        // Destrói após a animação de explosão
        this.once('animationcomplete-fireball_explode', () => {
            this.destroy();
        });
    }

    // Método para causar dano
    getDamage() {
        return this.damage;
    }
}